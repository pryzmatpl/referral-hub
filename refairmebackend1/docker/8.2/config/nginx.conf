worker_processes auto;
error_log stderr warn;
pid /run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    client_max_body_size 0;
    include mime.types;
    default_type application/octet-stream;

    large_client_header_buffers 4 64k;
    ignore_invalid_headers on;


    # Define custom log format to include reponse times
#    log_format main_timed '$remote_addr - $remote_user [$time_local] "$request" '
#                          '$status $body_bytes_sent "$http_referer" '
#                          '"$http_user_agent" "$http_x_forwarded_for" '
#                          '$request_time $upstream_response_time $pipe $upstream_cache_status';

    log_format main_timed '$remote_addr - $remote_user [$time_local] "$request" '
                          '$status $body_bytes_sent "$http_referer" '
                          '"$http_user_agent" "$http_cookie" '
                          '"$request_body"';

    access_log /var/www/stdout.log main_timed;
    error_log /var/www/stderr.log debug;

    send_timeout 6000s;
    keepalive_timeout 6000s;

    # Write temporary files to /tmp so they can be created as a non-privileged user
    client_body_temp_path /tmp/client_temp;
    proxy_temp_path /tmp/proxy_temp_path;
    fastcgi_temp_path /tmp/fastcgi_temp;
    uwsgi_temp_path /tmp/uwsgi_temp;
    scgi_temp_path /tmp/scgi_temp;

    # Hardening
    proxy_hide_header X-Powered-By;
    fastcgi_hide_header X-Powered-By;
    server_tokens off;

    # Enable gzip compression by default
    gzip on;
    gzip_proxied any;
    gzip_types text/plain application/xml text/css text/js text/xml application/x-javascript text/javascript application/json application/xml+rss;
    gzip_vary on;
    gzip_disable "msie6";

    # Include server configs
    include /etc/nginx/conf.d/*.conf;
}
