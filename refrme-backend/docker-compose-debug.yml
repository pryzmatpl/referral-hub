# Copyright: PRIZM Piotr SÅ‚upski 2023

version: '3'
services:
    aimatch:
        build:
            context: ./docker/8.2/
            dockerfile: Dockerfile.debug
        extra_hosts:
            - 'host.docker.internal:host-gateway'
        ports:
            - '${APP_PORT:-80}:80'
            - '443:443'
        environment:
            WWWUSER: 'www-data'
            XDEBUG_MODE: '${SAIL_XDEBUG_MODE:-on}'
            XDEBUG_CONFIG: '${SAIL_XDEBUG_CONFIG:-client_host=host.docker.internal}'
            UPLOAD_LIMIT: '6400M'
            REDIS_HOST: 'redis'
            TZ: Europe/Warsaw
        volumes:
            - '.:/var/www/html'
        depends_on:
            - mysql
            - redis
            - meilisearch
    aimatch_queue:
        build:
            context: ./docker/8.2-queue/
            dockerfile: Dockerfile.debug-queue
        environment:
            WWWUSER: 'www-data'
            LARAVEL_SAIL: 1
            REDIS_HOST: 'redis' # Set the Redis host to the Redis container's service name
            UPLOAD_LIMIT: '6400M'
            TZ: Europe/Warsaw
        volumes:
            - '.:/var/www/html'
        depends_on:
            - mysql
    mysql:
        image: 'mysql/mysql-server:8.0'
        ports:
            - '${FORWARD_DB_PORT:-3306}:3306'
        environment:
            MYSQL_ROOT_PASSWORD: '${DB_PASSWORD}'
            MYSQL_ROOT_HOST: "%"
            MYSQL_DATABASE: '${DB_DATABASE}'
            MYSQL_USER: '${DB_USERNAME}'
            MYSQL_PASSWORD: '${DB_PASSWORD}'
            MYSQL_ALLOW_EMPTY_PASSWORD: 1
        volumes:
            - 'mysql:/var/lib/mysql'
        healthcheck:
            test: ["CMD", "mysqladmin", "ping", "-p${DB_PASSWORD}"]
            retries: 3
            timeout: 5s
        pid: "host"
    redis:
        image: 'redis:alpine'
        ports:
            - '${FORWARD_REDIS_PORT:-6379}:6379'
        volumes:
            - 'redis:/data'
        healthcheck:
            test: ["CMD", "redis-cli", "ping"]
            retries: 3
            timeout: 5s
    meilisearch:
        image: 'getmeili/meilisearch:latest'
        ports:
            - '${FORWARD_MEILISEARCH_PORT:-7700}:7700'
        volumes:
            - 'meilisearch:/data.ms'
        networks:
            - default
        healthcheck:
            test: ["CMD", "wget", "--no-verbose", "--spider",  "http://localhost:7700/health"]
            retries: 3
            timeout: 5s
    mailhog:
        image: 'mailhog/mailhog:latest'
        ports:
            - '${FORWARD_MAILHOG_PORT:-1025}:1025'
            - '${FORWARD_MAILHOG_DASHBOARD_PORT:-8025}:8025'
        networks:
            - default
    mockserver:
        image: 'node'
        ports:
            - '${MOCKSERVER_PORT:-4000}:4000'
        working_dir: /app
        volumes:
            - ./tests/Support/Mock:/app
        command: ['/bin/sh', '-c', 'npm install && npm start']
    phpmyadmin:
        image: phpmyadmin/phpmyadmin
        links:
            - mysql
        environment:
            PMA_HOST: db
            PMA_PORT: 3306
            PMA_ARBITRARY: 1
        restart: always
        ports:
            - 8081:80

volumes:
    mysql:
        driver: local
    redis:
        driver: local
    meilisearch:
        driver: local
    phpmyadmin:
        driver: local
